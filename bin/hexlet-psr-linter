#!/usr/bin/env php
<?php

require_once __DIR__ . '/../vendor/autoload.php';

use Colors\Color;

use function \HexletPsrLinter\lint;
use function \HexletPsrLinter\buildReport;
use function \HexletPsrLinter\Utils\formatErrorMessage;
use function \HexletPsrLinter\Utils\getFilesByPath;

//echo getcwd() . PHP_EOL;
try {
    $exitCode = 0;

    $cmd = new \Commando\Command();
    $cmd->doNotTrapErrors();
    $cmd->argument()
        ->title('<path>')
        ->describedAs('A file or folder to lint.')
        ->require();

    $cmd->flag('f')
        ->aka('fix')
        ->describedAs('Fix errors if it is possible.')
        ->boolean();

    $args = $cmd->getArgumentValues();
    $path = $args[0];

    $flags = $cmd->getFlagValues();
    $autoFix = $flags['f'];

    $files = getFilesByPath($path);
    foreach ($files as $file) {
        echo (new Color(realpath($file)))->white->underline . PHP_EOL;
        $fileContent = file_get_contents($file);
        $result = lint($fileContent, $autoFix);

        if ($autoFix) {
            $fixedCode = $result['fixedCode'];
            file_put_contents($file, $fixedCode);
        }

        $errors = $result['errors'];
        $report = buildReport($errors);
        echo $report->getOutput() . PHP_EOL;

        if (is_null($errors) || count($errors) > 0) {
            $exitCode = 1;
        }
    }

    exit($exitCode);
} catch (Throwable $e) {
    //echo get_class($e) . PHP_EOL;
    echo formatErrorMessage($e->getMessage());
    return 1;
}
